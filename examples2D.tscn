[gd_scene load_steps=20 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform vec4 top_col : hint_color;
uniform vec4 bot_col : hint_color;
uniform sampler2D noise;

vec3 blend_color_dodge(vec3 __top_col, vec3 __bot_col)
{
	return __bot_col / (1.0 - __top_col.rgb);
}

void fragment() {
	COLOR.rgb = blend_color_dodge(top_col.rgb, bot_col.rgb * texture(noise, UV).r);
}"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 5 )
shader_param/top_col = Color( 0.380392, 0.207843, 0.631373, 1 )
shader_param/bot_col = Color( 0.219608, 0.72549, 0.290196, 1 )
shader_param/noise = SubResource( 3 )

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

uniform vec4 top_col : hint_color;
uniform vec4 bot_col : hint_color;
uniform sampler2D noise;

vec3 blend_gamma_illumination(vec3 __top_col, vec3 __bot_col)
{
	return (1.0 - pow(__bot_col, (1.0 / __top_col)));
}

void fragment() {
	COLOR.rgb = blend_gamma_illumination(top_col.rgb, bot_col.rgb * texture(noise, UV).r);
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/top_col = Color( 0.670588, 0.815686, 0.572549, 1 )
shader_param/bot_col = Color( 0.556863, 0.584314, 0.694118, 1 )
shader_param/noise = SubResource( 3 )

[sub_resource type="Shader" id=10]
code = "shader_type canvas_item;

uniform vec4 top_col : hint_color;
uniform vec4 bot_col : hint_color;
uniform sampler2D noise;

vec3 blend_gamma_light(vec3 __top_col, vec3 __bot_col)
{
	return pow(__bot_col, __top_col);
}

void fragment() {
	COLOR.rgb = blend_gamma_light(top_col.rgb, bot_col.rgb * texture(noise, UV).r);
}"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )
shader_param/top_col = Color( 0.52549, 0.211765, 0.380392, 1 )
shader_param/bot_col = Color( 0.34902, 0.278431, 0.537255, 1 )
shader_param/noise = SubResource( 3 )

[sub_resource type="Shader" id=12]
code = "shader_type canvas_item;

uniform vec4 top_col : hint_color;
uniform vec4 bot_col : hint_color;
uniform sampler2D noise;

vec3 blend_linear_light(vec3 __top_col, vec3 __bot_col)
{
	return (__bot_col + 2.0 * __top_col) - 1.0;
}

void fragment() {
	COLOR.rgb = blend_linear_light(top_col.rgb, bot_col.rgb * texture(noise, UV).r);
}"

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 12 )
shader_param/top_col = Color( 0.705882, 0.764706, 0.360784, 1 )
shader_param/bot_col = Color( 0.670588, 0.164706, 0.00784314, 1 )
shader_param/noise = SubResource( 3 )

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;

uniform vec4 top_col : hint_color;
uniform vec4 bot_col : hint_color;
uniform sampler2D noise;

vec3 blend_gamma_dark(vec3 __top_col, vec3 __bot_col)
{
	return pow(__bot_col, (1.0 / __top_col));
}

void fragment() {
	COLOR.rgb = blend_gamma_dark(top_col.rgb, bot_col.rgb * texture(noise, UV).r);
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )
shader_param/top_col = Color( 0.435294, 0.792157, 0.188235, 1 )
shader_param/bot_col = Color( 0.666667, 0.180392, 0.180392, 1 )
shader_param/noise = SubResource( 3 )

[sub_resource type="Shader" id=14]
code = "shader_type canvas_item;

uniform vec2 position = vec2(0.5);
uniform float radius = 0.5;

uniform vec4 color : hint_color;

float sdCircle(vec2 pos, float r) {
	return length(pos) - r;
}

void fragment() {
	float circle = sdCircle(UV - position, radius);
	//circle = log2(roundEven(circle * 2.0));
	
	COLOR = vec4((1.0 - step(mod(circle, 5.0), 1.0)) * color);
}"

[sub_resource type="ShaderMaterial" id=15]
shader = SubResource( 14 )
shader_param/position = Vector2( 0.554, 0.5 )
shader_param/radius = 0.25
shader_param/color = Color( 0.168627, 0.623529, 0.443137, 1 )

[sub_resource type="Shader" id=16]
code = "shader_type canvas_item;

uniform vec2 position = vec2(0.5);
uniform vec2 proportions = vec2(0.5);
uniform vec4 radius = vec4(0.5);

uniform vec4 color : hint_color;

float sdRoundedBox( vec2 p, vec2 b, vec4 r )
{
    r.xy = (p.x>0.0)?r.xy : r.zw;
    r.x  = (p.y>0.0)?r.x  : r.y;
    vec2 q = abs(p)-b+r.x;
    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;
}

void fragment() {
	float box = sdRoundedBox(UV - position, proportions, radius); 
	COLOR = vec4((1.0 - step(mod(box, 5.0), 1.0)) * color);
}"

[sub_resource type="ShaderMaterial" id=17]
shader = SubResource( 16 )
shader_param/position = Vector2( 0.5, 0.5 )
shader_param/proportions = Vector2( 0.25, 0.25 )
shader_param/radius = Plane( 0.201, 0, 0, 0.253 )
shader_param/color = Color( 0.168627, 0.623529, 0.442279, 1 )

[sub_resource type="Shader" id=18]
code = "shader_type canvas_item;

uniform vec2 position = vec2(0.5);
uniform vec2 proportions = vec2(0.25);

uniform vec4 color : hint_color;

float sdBox( in vec2 p, in vec2 b )
{
    vec2 d = abs(p)-b;
    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);
}

void fragment() {
	float box = sdBox(UV - position, proportions); 
	COLOR = vec4((1.0 - step(mod(box, 5.0), 1.0)) * color);
}"

[sub_resource type="ShaderMaterial" id=19]
shader = SubResource( 18 )
shader_param/position = Vector2( 0.5, 0.5 )
shader_param/proportions = Vector2( 0.25, 0.25 )
shader_param/color = Color( 0.168627, 0.623529, 0.442279, 1 )

[node name="Examples" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="BlendModes" type="Control" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0

[node name="VBoxContainer" type="VBoxContainer" parent="BlendModes"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Lighten" type="VBoxContainer" parent="BlendModes/VBoxContainer"]
margin_right = 1024.0
margin_bottom = 298.0
size_flags_vertical = 3

[node name="LightenLabel" type="Label" parent="BlendModes/VBoxContainer/Lighten"]
margin_right = 1024.0
margin_bottom = 14.0
text = "Lighten"
align = 1

[node name="HBoxContainer" type="HBoxContainer" parent="BlendModes/VBoxContainer/Lighten"]
margin_top = 18.0
margin_right = 1024.0
margin_bottom = 153.0

[node name="ColorDodgePreview" type="VBoxContainer" parent="BlendModes/VBoxContainer/Lighten/HBoxContainer"]
margin_right = 100.0
margin_bottom = 135.0
rect_min_size = Vector2( 100, 100 )

[node name="ColorDodge" type="TextureRect" parent="BlendModes/VBoxContainer/Lighten/HBoxContainer/ColorDodgePreview"]
material = SubResource( 4 )
margin_right = 100.0
margin_bottom = 100.0
rect_min_size = Vector2( 100, 100 )
texture = ExtResource( 1 )
expand = true

[node name="Label" type="Label" parent="BlendModes/VBoxContainer/Lighten/HBoxContainer/ColorDodgePreview"]
margin_top = 112.0
margin_right = 100.0
margin_bottom = 126.0
size_flags_vertical = 6
text = "Color Dodge"
align = 1

[node name="GammaIlluminationPreview" type="VBoxContainer" parent="BlendModes/VBoxContainer/Lighten/HBoxContainer"]
margin_left = 104.0
margin_right = 204.0
margin_bottom = 135.0
rect_min_size = Vector2( 100, 100 )

[node name="GammaIllumination" type="TextureRect" parent="BlendModes/VBoxContainer/Lighten/HBoxContainer/GammaIlluminationPreview"]
material = SubResource( 9 )
margin_right = 100.0
margin_bottom = 100.0
rect_min_size = Vector2( 100, 100 )
texture = ExtResource( 1 )
expand = true

[node name="Label" type="Label" parent="BlendModes/VBoxContainer/Lighten/HBoxContainer/GammaIlluminationPreview"]
margin_top = 104.0
margin_right = 100.0
margin_bottom = 135.0
size_flags_vertical = 6
text = "Gamma Illumination"
align = 1
valign = 1
autowrap = true

[node name="GammaLightPreview" type="VBoxContainer" parent="BlendModes/VBoxContainer/Lighten/HBoxContainer"]
margin_left = 208.0
margin_right = 308.0
margin_bottom = 135.0
rect_min_size = Vector2( 100, 100 )

[node name="GammaLight" type="TextureRect" parent="BlendModes/VBoxContainer/Lighten/HBoxContainer/GammaLightPreview"]
material = SubResource( 11 )
margin_right = 100.0
margin_bottom = 100.0
rect_min_size = Vector2( 100, 100 )
texture = ExtResource( 1 )
expand = true

[node name="Label" type="Label" parent="BlendModes/VBoxContainer/Lighten/HBoxContainer/GammaLightPreview"]
margin_top = 112.0
margin_right = 100.0
margin_bottom = 126.0
size_flags_vertical = 6
text = "Gamma Light"
align = 1
valign = 1
autowrap = true

[node name="LinearLightPreview" type="VBoxContainer" parent="BlendModes/VBoxContainer/Lighten/HBoxContainer"]
margin_left = 312.0
margin_right = 412.0
margin_bottom = 135.0
rect_min_size = Vector2( 100, 100 )

[node name="LinearLight" type="TextureRect" parent="BlendModes/VBoxContainer/Lighten/HBoxContainer/LinearLightPreview"]
material = SubResource( 13 )
margin_right = 100.0
margin_bottom = 100.0
rect_min_size = Vector2( 100, 100 )
texture = ExtResource( 1 )
expand = true

[node name="Label" type="Label" parent="BlendModes/VBoxContainer/Lighten/HBoxContainer/LinearLightPreview"]
margin_top = 112.0
margin_right = 100.0
margin_bottom = 126.0
size_flags_vertical = 6
text = "Linear Light"
align = 1
valign = 1
autowrap = true

[node name="Darken" type="VBoxContainer" parent="BlendModes/VBoxContainer"]
margin_top = 302.0
margin_right = 1024.0
margin_bottom = 600.0
size_flags_vertical = 3

[node name="DarkenLabel" type="Label" parent="BlendModes/VBoxContainer/Darken"]
margin_right = 1024.0
margin_bottom = 14.0
text = "Darken"
align = 1

[node name="HBoxContainer" type="HBoxContainer" parent="BlendModes/VBoxContainer/Darken"]
margin_top = 18.0
margin_right = 1024.0
margin_bottom = 136.0

[node name="GammaDarkPreview" type="VBoxContainer" parent="BlendModes/VBoxContainer/Darken/HBoxContainer"]
margin_right = 100.0
margin_bottom = 118.0
rect_min_size = Vector2( 100, 100 )

[node name="GammaDark" type="TextureRect" parent="BlendModes/VBoxContainer/Darken/HBoxContainer/GammaDarkPreview"]
material = SubResource( 7 )
margin_right = 100.0
margin_bottom = 100.0
rect_min_size = Vector2( 100, 100 )
texture = ExtResource( 1 )
expand = true

[node name="Label" type="Label" parent="BlendModes/VBoxContainer/Darken/HBoxContainer/GammaDarkPreview"]
margin_top = 104.0
margin_right = 100.0
margin_bottom = 118.0
size_flags_vertical = 6
text = "Gamma Dark"
align = 1

[node name="Shapes" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="VBoxContainer" type="VBoxContainer" parent="Shapes"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Normal" type="VBoxContainer" parent="Shapes/VBoxContainer"]
margin_right = 1024.0
margin_bottom = 298.0
size_flags_vertical = 3

[node name="Label" type="Label" parent="Shapes/VBoxContainer/Normal"]
margin_right = 1024.0
margin_bottom = 14.0
text = "Normal"
align = 1

[node name="HBoxContainer" type="HBoxContainer" parent="Shapes/VBoxContainer/Normal"]
margin_top = 18.0
margin_right = 1024.0
margin_bottom = 136.0

[node name="Circle" type="VBoxContainer" parent="Shapes/VBoxContainer/Normal/HBoxContainer"]
margin_right = 100.0
margin_bottom = 118.0

[node name="ColorRect" type="ColorRect" parent="Shapes/VBoxContainer/Normal/HBoxContainer/Circle"]
material = SubResource( 15 )
margin_right = 100.0
margin_bottom = 100.0
rect_min_size = Vector2( 100, 100 )
size_flags_vertical = 3

[node name="Label" type="Label" parent="Shapes/VBoxContainer/Normal/HBoxContainer/Circle"]
margin_top = 104.0
margin_right = 100.0
margin_bottom = 118.0
text = "Circle"
align = 1

[node name="RoundedBox" type="VBoxContainer" parent="Shapes/VBoxContainer/Normal/HBoxContainer"]
margin_left = 104.0
margin_right = 204.0
margin_bottom = 118.0

[node name="ColorRect" type="ColorRect" parent="Shapes/VBoxContainer/Normal/HBoxContainer/RoundedBox"]
material = SubResource( 17 )
margin_right = 100.0
margin_bottom = 100.0
rect_min_size = Vector2( 100, 100 )
size_flags_vertical = 3

[node name="Label" type="Label" parent="Shapes/VBoxContainer/Normal/HBoxContainer/RoundedBox"]
margin_top = 104.0
margin_right = 100.0
margin_bottom = 118.0
text = "Rounded Box"
align = 1

[node name="Box" type="VBoxContainer" parent="Shapes/VBoxContainer/Normal/HBoxContainer"]
margin_left = 208.0
margin_right = 308.0
margin_bottom = 118.0

[node name="ColorRect" type="ColorRect" parent="Shapes/VBoxContainer/Normal/HBoxContainer/Box"]
material = SubResource( 19 )
margin_right = 100.0
margin_bottom = 100.0
rect_min_size = Vector2( 100, 100 )
size_flags_vertical = 3

[node name="Label" type="Label" parent="Shapes/VBoxContainer/Normal/HBoxContainer/Box"]
margin_top = 104.0
margin_right = 100.0
margin_bottom = 118.0
text = "Box"
align = 1

[node name="Rounded" type="VBoxContainer" parent="Shapes/VBoxContainer"]
margin_top = 302.0
margin_right = 1024.0
margin_bottom = 600.0
size_flags_vertical = 3

[node name="Label" type="Label" parent="Shapes/VBoxContainer/Rounded"]
margin_right = 1024.0
margin_bottom = 14.0
text = "Rounded"
align = 1

[node name="HBoxContainer" type="HBoxContainer" parent="Shapes/VBoxContainer/Rounded"]
margin_top = 18.0
margin_right = 1024.0
margin_bottom = 18.0
